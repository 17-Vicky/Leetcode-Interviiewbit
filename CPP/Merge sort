class Solution {
public:
    
    
    
    void merge(vector<int>&nums,int l,int mid,int h){
        
    int n1=mid+1-l;
    int n2=h-mid;
        int a[n1],b[n2];
    for (int i = 0; i < n1; i++)
        a[i]=nums[l+i];
    for (int i = 0; i < n2; i++)
         b[i]=nums[mid+1+i];
    
    
int i=0,j=0;int  k=l;


while (i<n1 && j<n2)
{
if(a[i]<b[j]){
    nums[k]=a[i];
    i++;k++;
}
else{
    nums[k]=b[j];
    j++;k++;
}

}


while (i<n1)
{
    nums[k]=a[i];
    i++;k++;
}
while (j<n2)
{
    nums[k]=b[j];
    j++;k++;
} }
    
    void mergesort(vector <int>&nums,int l,int h){
        
        if(l>=h)return;
        
            int mid=(l+h)/2;
            
            mergesort(nums,l,mid);
            mergesort(nums,mid+1,h);
            merge(nums,l,mid,h);
                   
    }
    
    
    vector<int> sortArray(vector<int>& nums) {
        
       mergesort(nums,0,nums.size()-1);
                 
                 return nums;
                         
    }
};
